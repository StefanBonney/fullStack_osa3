{"version":3,"sources":["Henkilo.js","personService.js","Notification.js","App.js","index.js"],"names":["Henkilo","_ref","id","name","number","react_default","a","createElement","url","personService","getAll","axios","get","then","response","data","create","newPerson","post","remove","newUrl","console","log","delete","update","newObject","put","concat","Notification","ilmoitus","className","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addPerson","event","preventDefault","personObject","state","newName","newNumber","persons","map","person","includes","setState","setTimeout","index","indexOf","existingObject","window","confirm","filter","updatedPerson","catch","error","alert","n","deletePerson","personId","handleNameChange","target","value","handleNumberChange","handleRajaaChange","personsToShow","toLowerCase","rajaaName","personList","src_Henkilo","onClick","_this2","_this3","rajaaname","rajaaNamesOrInitial","onChange","onSubmit","type","src_Notification","key","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c98d1356.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Henkilo = ({id, name, number}) => {\r\n    return(\r\n        <p>\r\n            {name} {number}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Henkilo","import axios from 'axios'\r\n\r\nconst url = '/api/persons'\r\n\r\n//__________________________________________________[GET-ALL]\r\nconst getAll = () => {\r\n    const request = axios.get(url)\r\n    /*\r\n    const nonExisting = {\r\n        id: 10000,\r\n        name: 'Ei palvelimella henkilö',\r\n        number: '677890'\r\n    }\r\n    */\r\n    return request.then(response => response.data)//.concat(nonExisting))\r\n}\r\n\r\n//__________________________________________________[GET-ONE]\r\nconst create = (newPerson) => {\r\n    const request = axios.post(url,newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const newUrl = url + '/' + id\r\n    console.log(newUrl)\r\n    const request = axios.delete(newUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n//_______________________________________________[PUT]\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${url}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }//update\r\n\r\n\r\nexport default { getAll, create, remove, update}","import React from 'react'\r\n\r\nconst Notification = ({ilmoitus}) => {\r\n    return(\r\n        <h3 className=\"notification\">{ilmoitus}</h3>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react';\nimport Henkilo from './Henkilo'\nimport personService from './personService'\nimport Notification from './Notification'\nimport './index.css'\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      persons: [],\n      newName: '',\n      newNumber: '',\n      ilmoitus: '',\n      rajaaName: '',\n      personsToShow: []\n    }\n  }\n\n//_______________________________________[GET PERSONS]\n  componentWillMount(){\n    console.log('1:PERSONS', this.state.persons)\n   personService\n      .getAll()\n      .then(persons => {\n        this.setState({ persons })\n    })\n    console.log('2:PERSONS', this.state.persons)\n  }//componentWillMount\n//____________________________________\n\n\n//_________________________________________[ADD PERSON]\n  addPerson = (event) => {\n    event.preventDefault() \n\n  \n    const personObject = {\n      name: this.state.newName,\n      number: this.state.newNumber\n    }//personObject\n\n    const name = personObject.name\n    const allNames = this.state.persons.map(person => person.name)\n    if(allNames.includes(name) === false)\n    {\n      personService\n        .create(personObject)\n        .then(newPerson => {\n          this.setState({\n            persons: this.state.persons.concat(newPerson),\n            newName: '',\n            newNumber: '',\n            ilmoitus: `Lisättiin henkilö ${personObject.name}`\n          })\n          setTimeout(() => {\n            this.setState({ilmoitus:''})\n          }, 5000)\n      })//personService(create)\n    }//if \n    else{ //_________________________________________________________________[check for existing name]\n      const names = this.state.persons.map( person => person.name)\n      const index = names.indexOf(personObject.name) \n      const existingObject = this.state.persons[index]\n      const id = existingObject.id\n      window.confirm(existingObject.name + ' on jo luettelossa, korvataanko vanha numero uudella?')\n      this.setState({\n        persons: this.state.persons.filter(person => person.id !== existingObject.id),\n      })\n      personService\n        .update(id, personObject)\n        .then(updatedPerson => {\n          console.log('in personService update')\n          this.setState({\n            persons: this.state.persons.concat(updatedPerson),\n            newName: '',\n            newNumber: '',\n            ilmoitus: `Päivitettiin henkilö ${personObject.name}`\n          })\n          console.log('in personService update')\n          setTimeout(() => {\n            this.setState({ilmoitus:''})\n          }, 50000)\n\n        })\n        .catch(error => {\n          console.log(error)\n          alert(`'${existingObject.name}' on jo valitettavasti poistettu`)\n          this.setState({ persons: this.state.persons.filter(n => n.id !== id ) })\n      })//personService(update)\n\n\n    } \n\n  }//addPerson    \n//___________________________________________\n\n\n//_____________________________________________________[DELETE PERSON]  \n  deletePerson = (personId) => {\n  console.log(personId)\n  personService.remove(personId)\n    .then(response => {\n      this.setState({\n        persons: this.state.persons.filter( person => person.id !== personId),\n        ilmoitus: `Poistettiin henkilö jonka id '${personId}'`\n      })\n      setTimeout(() => {\n        this.setState({ilmoitus: null})\n      }, 5000)\n    })\n}\n//_________________________________________\n\n\n\n\n//______________________________________________________[HANDLE FORM CHANGES]\n  handleNameChange = (event) => {\n    console.log(event.target.value)\n    this.setState({ newName: event.target.value })\n  }//handleNameChange\n\n  handleNumberChange = (event) => {\n    console.log(event.target.value)\n    this.setState({ newNumber: event.target.value })\n  }//handleNumberChnage\n\n  handleRajaaChange = (event) => {\n    const value = event.target.value\n    const list = this.state.persons\n    const personsToShow = list.filter( person => person.name.toLowerCase().includes(value))\n    this.setState({\n      rajaaName: event.target.value,\n      personsToShow\n    })\n  }\n//___________________________________________________________\n\n  personList = () => {\n    return(  \n    <ul>\n    {this.state.persons.map(person => (\n      <div>\n        <Henkilo\n          name={person.name}\n          number={person.number}\n        />\n        <button  onClick={() => {this.deletePerson(person.id)}}>x</button>\n      </div>)\n    )}\n    </ul>\n    )}  \n\n\n//########################################################################################################[RENDER]\n  render() {\n  \n  console.log(this.state.rajaaname)\n\n  const rajaaNamesOrInitial = this.state.rajaaName ? \n    this.state.personsToShow :\n    this.state.persons\n\n\n\n  const persons = this.state.persons\n  console.log('3:PERSONS', persons)\n\n    return (\n      <div>\n        <h1>Puhelinluettelo</h1>\n        \n        <form>\n          <div>\n            rajaa näytettäviä: <input value={this.state.rajaaName} onChange={this.handleRajaaChange}/>\n          </div><br/>\n        </form>\n\n        <h2>Lisää uusi</h2>\n        <form onSubmit={this.addPerson}>\n          <div>\n            nimi: <input value={this.state.newName} onChange={this.handleNameChange}/>\n          </div>\n          <div>\n            numero: <input value={this.state.newNumber} onChange={this.handleNumberChange}/>\n          </div>\n          <div>\n            <button type=\"submit\">lisää</button>\n          </div>\n        </form>\n\n        <h2>Numerot</h2>\n        <Notification ilmoitus={this.state.ilmoitus} />        \n        <ul>\n        {rajaaNamesOrInitial.map(person => \n          <div key={person.id} >\n            <Henkilo\n              name={person.name}\n              number={person.number}\n            />\n            <button onClick={() => {this.deletePerson(person.id)}}>x</button>\n          </div>\n        )}\n        </ul>\n\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}